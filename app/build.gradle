apply plugin: 'com.android.application'
apply from: 'generate.gradle'
apply plugin: 'kotlin-android'
//layout文件id直接作为控件的引用使用
apply plugin: 'kotlin-android-extensions'
/*apply from: 'aspectj-lib-configure.gradle'*/
/*import org.aspectj.bridge.IMessage
import org.aspectj.bridge.MessageHandler
import org.aspectj.tools.ajc.Main

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.aspectj:aspectjtools:1.9.4'
        classpath 'org.aspectj:aspectjweaver:1.9.4'
    }
}
repositories {
    mavenCentral()
}
final def log = project.logger
final def variants = project.android.applicationVariants
variants.all { variant ->
    if (!variant.buildType.isDebuggable()) {
        log.debug("Skipping non-debuggable build type '${variant.buildType.name}'.")
        return;
    }
    JavaCompile javaCompile = variant.javaCompile
    javaCompile.doLast {
        String[] args = ["-showWeaveInfo",
                         "-1.8",
                         "-inpath", javaCompile.destinationDir.toString(),
                         "-aspectpath", javaCompile.classpath.asPath,
                         "-d", javaCompile.destinationDir.toString(),
                         "-classpath", javaCompile.classpath.asPath,
                         "-bootclasspath", project.android.bootClasspath.join(File.pathSeparator)]
        log.debug "ajc args: " + Arrays.toString(args)

        MessageHandler handler = new MessageHandler(true);
        new Main().run(args, handler);
        for (IMessage message : handler.getMessages(null, true)) {
            switch (message.getKind()) {
                case IMessage.ABORT:
                case IMessage.ERROR:
                case IMessage.FAIL:
                    log.error message.message, message.thrown
                    break;
                case IMessage.WARNING:
                    log.warn message.message, message.thrown
                    break;
                case IMessage.INFO:
                    log.info message.message, message.thrown
                    break;
                case IMessage.DEBUG:
                    log.debug message.message, message.thrown
                    break;
            }
        }
    }
}*/

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion
    defaultConfig {
        applicationId "com.wp.android_base"
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }

    //KeyStore配置
    def keyStorePropertiesFile = rootProject.file("keystore.properties")
    def keyStoreProperties = new Properties()
    keyStoreProperties.load(new FileInputStream(keyStorePropertiesFile))
    signingConfigs {
        release {
            storeFile file(keyStoreProperties['storeFile'])
            storePassword keyStoreProperties['storePassword']
            keyAlias keyStoreProperties['keyAlias']
            keyPassword keyStoreProperties['keyPassword']
        }
    }

    buildTypes {
        release {
            //混淆
            minifyEnabled true
            //加载默认配置的混淆文件
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //签名
            signingConfig signingConfigs.release
            //zipAlign优化
            zipAlignEnabled true
            //移除无用的资源文件
            shrinkResources true
        }
        debug {
            minifyEnabled false
        }
    }

    //渠道
    flavorDimensions "version"
    productFlavors {
        internal {
            dimension "version"
        }
        play {
            dimension "version"
        }
    }

    //android studio 3.0之前，重命名apk名称
/*    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def outputFile = output.outputFile;
            if(outputFile != null && outputFile.name.endsWith('.apk')){
                def apkName = "test.apk"
                output.outputFile = new File(outputFile.parent,apkName)
            }
        }
    }*/

/*    applicationVariants.all { variant ->
        variant.outputs.all {
            if (variant.buildType.name.contains("release")) {
                outputFileName = "test_${defaultConfig.versionName}.apk"
            }
        }
    }*/

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "com.android.support:appcompat-v7:28.0.0"
    implementation "com.android.support:cardview-v7:28.0.0"
    implementation "com.android.support:design:28.0.0"
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation('com.android.support.test.espresso:espresso-core:3.0.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    //okhttp
    implementation 'com.squareup.okhttp3:okhttp:3.10.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.10.0'
    //retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.4.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.4.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'
    //rxjava
    implementation 'io.reactivex.rxjava2:rxjava:2.1.9'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.2'
    implementation 'com.google.code.gson:gson:2.8.2'
    //rxlifecycle
    implementation 'com.trello.rxlifecycle2:rxlifecycle:2.2.1'
    implementation 'com.trello.rxlifecycle2:rxlifecycle-android:2.2.1'
    implementation 'com.trello.rxlifecycle2:rxlifecycle-components:2.2.1'
    //stetho(网络调试)
    implementation 'com.facebook.stetho:stetho:1.5.0'
    implementation 'com.facebook.stetho:stetho-okhttp3:1.5.0'
    //leakcanary(内存泄漏检测)
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.5.4'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'
    //glide(图片加载）
    implementation 'com.github.bumptech.glide:glide:4.7.1'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.7.1'
    implementation('com.github.bumptech.glide:okhttp3-integration:4.7.1') {
        exclude group: 'glide-parent'
    }
    //pkcs5加密
    implementation 'com.madgag.spongycastle:core:1.58.0.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    //依赖aop aspectJ
    implementation project(':lib-aop')

    implementation 'com.yanzhenjie.recyclerview:support:1.3.2'


    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.50'
    implementation 'com.yqritc:recyclerview-flexibledivider:1.4.0'
}
repositories {
    mavenCentral()
}
